///
/// UnistylesNativeMiniRuntime.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `UnistylesNativeMiniRuntime`, backed by a C++ struct.
 */
public typealias UnistylesNativeMiniRuntime = margelo.nitro.unistyles.UnistylesNativeMiniRuntime

public extension UnistylesNativeMiniRuntime {
  private typealias bridge = margelo.nitro.unistyles.bridge.swift

  /**
   * Create a new instance of `UnistylesNativeMiniRuntime`.
   */
  init(colorScheme: ColorScheme, screen: Dimensions, contentSizeCategory: String, insets: Insets, pixelRatio: Double, fontScale: Double, rtl: Bool, statusBar: Dimensions, navigationBar: Dimensions, isPortrait: Bool, isLandscape: Bool) {
    self.init(colorScheme, screen, std.string(contentSizeCategory), insets, pixelRatio, fontScale, rtl, statusBar, navigationBar, isPortrait, isLandscape)
  }

  var colorScheme: ColorScheme {
    @inline(__always)
    get {
      return self.__colorScheme
    }
    @inline(__always)
    set {
      self.__colorScheme = newValue
    }
  }
  
  var screen: Dimensions {
    @inline(__always)
    get {
      return self.__screen
    }
    @inline(__always)
    set {
      self.__screen = newValue
    }
  }
  
  var contentSizeCategory: String {
    @inline(__always)
    get {
      return String(self.__contentSizeCategory)
    }
    @inline(__always)
    set {
      self.__contentSizeCategory = std.string(newValue)
    }
  }
  
  var insets: Insets {
    @inline(__always)
    get {
      return self.__insets
    }
    @inline(__always)
    set {
      self.__insets = newValue
    }
  }
  
  var pixelRatio: Double {
    @inline(__always)
    get {
      return self.__pixelRatio
    }
    @inline(__always)
    set {
      self.__pixelRatio = newValue
    }
  }
  
  var fontScale: Double {
    @inline(__always)
    get {
      return self.__fontScale
    }
    @inline(__always)
    set {
      self.__fontScale = newValue
    }
  }
  
  var rtl: Bool {
    @inline(__always)
    get {
      return self.__rtl
    }
    @inline(__always)
    set {
      self.__rtl = newValue
    }
  }
  
  var statusBar: Dimensions {
    @inline(__always)
    get {
      return self.__statusBar
    }
    @inline(__always)
    set {
      self.__statusBar = newValue
    }
  }
  
  var navigationBar: Dimensions {
    @inline(__always)
    get {
      return self.__navigationBar
    }
    @inline(__always)
    set {
      self.__navigationBar = newValue
    }
  }
  
  var isPortrait: Bool {
    @inline(__always)
    get {
      return self.__isPortrait
    }
    @inline(__always)
    set {
      self.__isPortrait = newValue
    }
  }
  
  var isLandscape: Bool {
    @inline(__always)
    get {
      return self.__isLandscape
    }
    @inline(__always)
    set {
      self.__isLandscape = newValue
    }
  }
}
